<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://localhost:4000/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.4.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-08-04T22:43:01+08:00</updated><id>http://localhost:4000//</id><title type="html">Hi, I’m Wang qinxiao</title><subtitle>读有趣的书，做有趣的事。
</subtitle><author><name>by 王勤晓</name></author><entry><title type="html">大数据处理二剑客之Spark</title><link href="http://localhost:4000/jekyll/update/2019/08/04/Hadoop&Spark1.html" rel="alternate" type="text/html" title="大数据处理二剑客之Spark" /><published>2019-08-04T17:25:00+08:00</published><updated>2019-08-04T17:25:00+08:00</updated><id>http://localhost:4000/jekyll/update/2019/08/04/Hadoop&amp;Spark1</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2019/08/04/Hadoop&amp;Spark1.html">&lt;p&gt;进入大数据领域，Hadoop和Spark是最先要了解的两个技术，至少目前看来是这样的。&lt;/p&gt;

&lt;p&gt;虽然一直在用它们，但对其没有系统的认识，甚至把二者混为一谈。现在梳理一下。&lt;/p&gt;

&lt;p&gt;要了解一项技术，首先思考它是干什么用的？&lt;code class=&quot;highlighter-rouge&quot;&gt;大数据领域的工作包括&quot;数据处理&quot;和&quot;数据分析&quot;&lt;/code&gt;。数据处理似食材准备，数据分析似烹饪过程。准备食材包括买菜、洗菜、切菜、腌制等过程，为下一步烹饪做准备；数据处理包括数据收集、存储、清洗、转换、组合等动作，方便我们进行下一步数据分析。&lt;code class=&quot;highlighter-rouge&quot;&gt;Hadoop和Spark就是数据处理这一阶段（大数据分析也有涉及，但以处理为主）的关键两项技术，二者有重合，但各司其职.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;这篇文章梳理Spark。首先，&lt;code class=&quot;highlighter-rouge&quot;&gt;一句话描述Spark：最受欢迎的大数据计算框架&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;Spark是加州大学伯克利分校的AMP实验室开发的类似Hadoop MapReduce的通用并行框架，诞生于2009年，2013年成为了Aparch基金项目。Spark是MapReduce的替代方案，而且兼容HDFS、Hive，可融入Hadoop的生态系统，以弥补MapReduce的不足。&lt;/p&gt;

&lt;h1 id=&quot;spark-vs-hadoop&quot;&gt;Spark VS Hadoop&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://wangqinxiao.github.io/jekyll/update/2019/07/28/Hadoop&amp;amp;Spark.html&quot;&gt;大数据处理二剑客之Hadoop&lt;/a&gt;一文梳理了Hadoop生态系统，Hadoop已有MapReduce计算框架，为什么又要用Spark作为大数据计算框架呢？&lt;/p&gt;

&lt;p&gt;答案是：因为&lt;code class=&quot;highlighter-rouge&quot;&gt;Spark比Hadoop MapReduce更快&lt;/code&gt;。Spark比MapReduce更快的原因是，Hadoop MapReduce直接读写存储设备硬盘（HDFS），而&lt;code class=&quot;highlighter-rouge&quot;&gt;Spark基于内存进行计算&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;Spark和Hadoop MaoReduce计算框架一样，是分布式架构。其特点是在数据计算的过程中，把中间结果缓存在内存中。在进行大量数据计算时，直接从内存中读取数据，这要比从硬盘中读取快很多，速度优势明显。&lt;/p&gt;

&lt;p&gt;但是，基于内存的计算同样也会带来缺点。&lt;code class=&quot;highlighter-rouge&quot;&gt;与Hadoop MapReduce相比，Spark的缺点是不稳定&lt;/code&gt;。内存毕竟有限，成本也高，如果数据量过大的话，容易造成内存溢出的问题，从而导致计算过程崩溃。Hadoop MapReduce写的程序虽然慢，但是总会算出结果。而Spark写的程序常常由于数据量过大、内存不够或者计算资源配置不合理，导致崩溃（如Lost stages等等）。笔者在一线使用Spark进行数据处理，程序崩溃是最头疼的事情。&lt;/p&gt;

&lt;p&gt;鉴于Spark基于内存计算而导致的速度快的优点和不稳定的缺点。在大数据项目的计算框架技术选型时，需要&lt;code class=&quot;highlighter-rouge&quot;&gt;综合考虑数据量、业务的时间要求、可用计算资源&lt;/code&gt;。一般在&lt;code class=&quot;highlighter-rouge&quot;&gt;数据处理阶段（原始数据量一般较大）的过程中用Hadoop MapReduce&lt;/code&gt;，在&lt;code class=&quot;highlighter-rouge&quot;&gt;数据分析（数据已经过清洗，数据量一般较小）的过程中使用Spark&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;Spark已经融入Hadoop系统，可支持Hadoop Yarn资源管理，HDFS进行数据存储。&lt;/p&gt;

&lt;h1 id=&quot;spark组成部分&quot;&gt;Spark组成部分&lt;/h1&gt;

&lt;p&gt;Spark的主要组件有：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;SparkCore：Spark核心计算组件，实现分布式计算。它是我们最常用到的组件。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;＊ SparkSQL：Spark Sql 是Spark来操作结构化数据的程序包，可以让我使用Hive SQL语句的方式来查询和处理数据。&lt;/p&gt;

&lt;p&gt;SparkStreaming： 是Spark提供的对实时数据进行流式计算的组件。&lt;/p&gt;

&lt;p&gt;MLlib：提供常用机器学习算法的实现库。&lt;/p&gt;

&lt;p&gt;GraphX：提供一个分布式图计算框架，能高效进行图计算。&lt;/p&gt;

&lt;h1 id=&quot;spark相关概念&quot;&gt;Spark相关概念&lt;/h1&gt;

&lt;p&gt;这部分梳理我们最常用到的Spark Core的运行原理。Spark程序在运行过程中，涉及到的概念包括Application、Driver、Executer、Job、Stage、RDD等。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Application：编写的Spark应用程序就是一个Application。&lt;/li&gt;
  &lt;li&gt;Driver：Driver运行Application的Main()函数并创建SparkContext，即应用程序的运行环境。SparkContext负责分布式Cluster间的通信、任务分配管理等。通常SparkContext即代表Driver。当Executor部分运行完毕后，Driver负责将SparkContext关闭&lt;/li&gt;
  &lt;li&gt;Excuter：执行器。一个Excuter代表一个进程，负责计算任务，并将结果存在内存或者磁盘上。Excuter越多，说明进程越多，执行速度也就更快。&lt;/li&gt;
  &lt;li&gt;Job：Job是一个计算作业，由一个或着多个任务集组成。一次Spark Action，例如ReduceByKey就会催生一次计算作业，行成一个Job。一个Job包含多个RDD及作用于相应RDD上的各种Operation。&lt;/li&gt;
  &lt;li&gt;Stage：Stage是一个任务集对应的调度阶段。每个Job会被拆分很多组Task，每组任务被称为Stage（或者TaskSet）。&lt;/li&gt;
  &lt;li&gt;Task：任务被送到某个Executor上的工作任务;单个分区数据集上的最小处理流程单元.&lt;/li&gt;
  &lt;li&gt;RDD：弹性分布式数据集（Resilient Distributed Datasets，RDD），Spark的一种数据对象，是Spark的基本计算单元。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;参考资料：&lt;/p&gt;

&lt;p&gt;https://www.cnblogs.com/xia520pi/p/8609938.html
https://baike.baidu.com/item/SPARK/2229312?fr=aladdin
https://blog.csdn.net/liuxiangke0210/article/details/79687240&lt;/p&gt;</content><author><name>by 王勤晓</name></author><summary type="html">进入大数据领域，Hadoop和Spark是最先要了解的两个技术，至少目前看来是这样的。</summary></entry><entry><title type="html">《为什么书呆子不受欢迎》句抄</title><link href="http://localhost:4000/jekyll/update/2019/07/28/why_nerds_are_unpopular_notes.html" rel="alternate" type="text/html" title="《为什么书呆子不受欢迎》句抄" /><published>2019-07-28T19:54:00+08:00</published><updated>2019-07-28T19:54:00+08:00</updated><id>http://localhost:4000/jekyll/update/2019/07/28/why_nerds_are_unpopular_notes</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2019/07/28/why_nerds_are_unpopular_notes.html">&lt;p&gt;最近在看硅谷创业教父Paul Graham（保罗·格雷厄姆）的Hackers and Painters（黑客与画家），一本收录其博客的文集，讲述其对计算机文化的思考。&lt;/p&gt;

&lt;p&gt;断断续续，每周末抽出时间来读，只读了三分之一，没有记笔记，也不求甚解。回想这种读书方法是不正确的，这本书虽不是传世经典，需熟读百遍才能其义自见，但只囫囵吞枣的读一遍还是不够的。起码有个读书笔记，加上自己的思考，想想如何学以致用，再不济也要抄几个会心的句子。&lt;/p&gt;

&lt;p&gt;此前读的几篇，自然是没有笔记，但遇到不错的句子还是随手划了记号。今日先总结一篇，权当好好读书的开始。&lt;/p&gt;

&lt;h3 id=&quot;why-nerds-are-unpopuler-为什么书呆子不受欢迎&quot;&gt;Why Nerds Are Unpopuler 为什么书呆子不受欢迎&lt;/h3&gt;

&lt;p&gt;本文讲述为什么Nerds（搞技术的书呆子）不受欢迎？从Nerds本身、人类社会学、家长、学校等方面都做了分析，最后把教育制度狠狠的批判了一番。&lt;/p&gt;

&lt;p&gt;1.&lt;code class=&quot;highlighter-rouge&quot;&gt;Another reason kids persecute nerds is to make themselves feel better. When you tread water, you lift yourself up by pushing water down. Likewise, in any social hierarchy, people unsure of their own position will try to emphasize it by maltreating those they think rank below. I've read that this is why poor whites in the United States are the group most hostile to blacks.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;其他孩子欺负Nerds的一个原因是通过打压别人，抬高自己，从而从心理上获得平衡。在人类社会中，往往对自己的地位不够自信的人才会欺凌比自己阶层低的人，底层人民狗咬狗，大狗咬小狗。比如，在美国最敌视黑人的是穷的白人。对于个人而言，避免自己称为被欺凌的对象，或者靠欺凌获得心理安慰的“穷白人”，只能是往更高的阶层爬升。&lt;/p&gt;

&lt;p&gt;2.&lt;code class=&quot;highlighter-rouge&quot;&gt;Like a politician who wants to distract voters from bad times at home, you can create an enemy if there isn't a real one. By singling out and persecuting a nerd, a group of kids from higher in the hierarchy create bonds between themselves. Attacking an outsider makes them all insiders. This is why the worst cases of bullying happen with groups.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;小孩子们欺负Nerds的另一个原因是为了合群。形成一个团体最有效的办法是找到一个共同的敌人，对外同仇敌忾，内部才显得团结。政客往往会用这一招来获得国内民众的支持，最近的特朗普在2020大选之前打压华为，少不了这方面的考虑。这招够损，但实用。&lt;/p&gt;

&lt;p&gt;3.&lt;code class=&quot;highlighter-rouge&quot;&gt;Bullying was only part of the problem. Another problem, and possibly an even worse one, was that we never had anything real to work on. Humans like to work; in most of the world, your work is your identity. And all the work we did was pointless, or seemed so at the time.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;校园霸凌还有一个原因，就是闲的没事干，吃饱了撑着找找茬。作者对现在教育制度大家批判，认为都是家长和学校太懒，学生在学校做的事情没有意义。作者观点似乎太偏激，只提出了问题，没给出有效的解决方案，这里不多加讨论。我记下这句话的原因是因为他提到：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;人其实都是喜欢工作的，在大多数情况下，工作就是个人的身份。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;如果我们讨厌工作，觉得工作很苦很累，往往不是因为工作强度大、时间长，而是因为觉得工作没有意义，没有收获感。对于成年人来说，工作是生活的主题，并影响甚至决定家庭、感情等其他各个方面。因此，对的职业规划显得更加重要。&lt;/p&gt;

&lt;p&gt;本文完。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.paulgraham.com/nerds.html&quot;&gt;hy Nerds Are Unpopuler 原文地址&lt;/a&gt;&lt;/p&gt;</content><author><name>by 王勤晓</name></author><summary type="html">最近在看硅谷创业教父Paul Graham（保罗·格雷厄姆）的Hackers and Painters（黑客与画家），一本收录其博客的文集，讲述其对计算机文化的思考。</summary></entry><entry><title type="html">大数据处理二剑客之Hadoop</title><link href="http://localhost:4000/jekyll/update/2019/07/28/Hadoop&Spark.html" rel="alternate" type="text/html" title="大数据处理二剑客之Hadoop" /><published>2019-07-28T15:44:00+08:00</published><updated>2019-07-28T15:44:00+08:00</updated><id>http://localhost:4000/jekyll/update/2019/07/28/Hadoop&amp;Spark</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2019/07/28/Hadoop&amp;Spark.html">&lt;p&gt;进入大数据领域，Hadoop和Spark是最先要了解的两个技术，至少目前看来是这样的。&lt;/p&gt;

&lt;p&gt;虽然一直在用它们，但对其没有系统的认识，甚至把二者混为一谈。现在梳理一下。&lt;/p&gt;

&lt;p&gt;要了解一项技术，首先思考它是干什么用的？&lt;code class=&quot;highlighter-rouge&quot;&gt;大数据领域的工作包括&quot;数据处理&quot;和&quot;数据分析&quot;&lt;/code&gt;。数据处理似食材准备，数据分析似烹饪过程。准备食材包括买菜、洗菜、切菜、腌制等过程，为下一步烹饪做准备；数据处理包括数据收集、存储、清洗、转换、组合等动作，方便我们进行下一步数据分析。&lt;code class=&quot;highlighter-rouge&quot;&gt;Hadoop和Spark就是数据处理这一阶段（大数据分析也有涉及，但以处理为主）的关键两项技术，二者有重合，但各司其职.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;这篇文章先梳理Hadoop。首先，&lt;code class=&quot;highlighter-rouge&quot;&gt;一句话描述Hadoop：大数据分析处理领域的分布式系统基础架构&lt;/code&gt;。Hadoop核心思想是分布式，即将任务分到多台计算机上进行处理。&lt;/p&gt;

&lt;h1 id=&quot;起源受启发于google&quot;&gt;起源：受启发于Google&lt;/h1&gt;

&lt;p&gt;Hadoop的诞生比Spark要早。可追溯到2004年，两个程序员Doug Cutting和Mike Cafarella受Google Lab 开发的Map/Reduce和Google File System(GFS)的启发，开始实施最初的版本（称为HDFS和MapReduce），最初Hadoop只与网页索引有关，用于处理海量网页数据进行搜索。随后由Apache基金会支持开发，逐渐发展为一个大数据分析处理领域的分布式系统基础架构。&lt;/p&gt;

&lt;p&gt;该项目的创建者，Doug Cutting解释Hadoop的得名 ：“这个名字是我孩子给一个棕黄色的大象玩具命名的“.&lt;/p&gt;

&lt;p&gt;Hadoop的主要组成部分是HDFS和MamReduce。&lt;/p&gt;

&lt;h1 id=&quot;hdfs分布式文件系统&quot;&gt;HDFS：分布式文件系统&lt;/h1&gt;
&lt;p&gt;HDFS（Hadoop Distributed File System，Hadoop分布式文件系统，顾名思义是用于存储数据的系统，与传统的分级文件系统（使用目录组织文件）相比，其一样可以增、删、改、查，HDFS的不同之处是分布式存储。&lt;/p&gt;

&lt;p&gt;分布式存储指的是存储在HDFS中的文件被分成块。HDFS有两个关键概念：NameNode和DataNode，NameNode可以控制所有文件的操作，DataNode用于存储文件。分布式文件系统设计的优势在于可支持海量数据de的快速存储和查询等操作。&lt;/p&gt;

&lt;h1 id=&quot;mapreduce分布式计算框架&quot;&gt;MapReduce：分布式计算框架&lt;/h1&gt;
&lt;p&gt;MapReduce，顾名思义其核心是Map（影射）函数和Reduce（化简、规约）函数。&lt;/p&gt;

&lt;p&gt;Map函数遍历集合里的每个目标对其应用同一个操作。再用烹饪的例子，在准备食材时需要洗菜，把茄子、辣椒、黄瓜……都洗一遍，逐个清洗这一过程就是Map，集合对象是各种食材，同一操作就是清洗。&lt;/p&gt;

&lt;p&gt;Reduce函数遍历集合里的每个目标将其综合称为一个结果。还是烹饪的例子，菜洗好后，开始做大杂烩，锅里加入茄子、加入辣椒、加入黄瓜……最终得到一盆大杂烩。加入各种食材这一过程就是Reduce，将多种食材归约为最重的一个结果———大杂烩菜。&lt;/p&gt;

&lt;p&gt;MapReduce这两个核心函数并不新鲜，其内容不仅是这二个函数（其他如Group，Sort等），而是一种编程模型，是一种方法，抽象理论。MapReduce借鉴了语言Lisp的函数式编程设计（什么是函数式编程，新文再议），体现了大数据处理过程中分而治之的思想。分布式是分而治之思想的实践，MapReduce专为分布式计算设计。&lt;/p&gt;

&lt;p&gt;除了HDFS和MapReduce，Hadoop还包括以下模块：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Hadoop Common：支持其他Hadoop模块的通用工具。&lt;/li&gt;
  &lt;li&gt;Hadoop YARN：一种作业调度和集群资源管理的框架。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Apache中其他Hadoop相关的项目包括：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Ambari：一种用于提供、管理和监督Apache Hadoop集群的基于Web UI的且易于使用的Hadoop管理工具。&lt;/li&gt;
  &lt;li&gt;Avro：一种数据序列化系统。&lt;/li&gt;
  &lt;li&gt;Cassandra：一种无单点故障的可扩展的分布式数据库。&lt;/li&gt;
  &lt;li&gt;Chukwa：一种用于管理大型分布式系统的数据收集系统。&lt;/li&gt;
  &lt;li&gt;HBase：一种支持存储大型表的结构化存储的可扩展的分布式数据库。&lt;/li&gt;
  &lt;li&gt;Hive：一种提供数据汇总和特定查询的数据仓库。&lt;/li&gt;
  &lt;li&gt;Mahout：一种可扩展的机器学习和数据挖掘库（Scala语言实现，可结合Spark后端）。&lt;/li&gt;
  &lt;li&gt;Pig：一种高级的数据流语言且支持并行计算的执行框架（2017年发布的最新版本0.17.0是添加了Spark上的Pig应* 用）。&lt;/li&gt;
  &lt;li&gt;Spark：一种用于Hadoop数据的快速通用计算引擎。Spark提供一种支持广泛应用的简单而易懂的编程模型，包括* ETL（ Extract-Transform-Load）、机器学习、流处理以及图计算。&lt;/li&gt;
  &lt;li&gt;Tez：一种建立在Hadoop YARN上数据流编程框架，它提供了一个强大而灵活的引擎来任意构建DAG* （Directed-acyclic-graph）任务去处理用于批处理和交互用例的数据。&lt;/li&gt;
  &lt;li&gt;ZooKeeper：一种给分布式应用提供高性能的协同服务系统。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;那么问题，既然Hadoop生态家族这么庞大，我们为什么要选择Spark作为对于大数据进行数据分析和数据挖掘的基本计算框架？欲知后事如何，请听下回分解。&lt;/p&gt;

&lt;p&gt;参考资料；
https://blog.51cto.com/xpleaf/2080181
https://baike.baidu.com/item/Hadoop/3526507&lt;/p&gt;</content><author><name>by 王勤晓</name></author><summary type="html">进入大数据领域，Hadoop和Spark是最先要了解的两个技术，至少目前看来是这样的。</summary></entry><entry><title type="html">2019 FLAG</title><link href="http://localhost:4000/jekyll/update/2019/07/21/myflag.html" rel="alternate" type="text/html" title="2019 FLAG" /><published>2019-07-21T15:44:00+08:00</published><updated>2019-07-21T15:44:00+08:00</updated><id>http://localhost:4000/jekyll/update/2019/07/21/myflag</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2019/07/21/myflag.html">&lt;p&gt;2019已过半，依然在华为。泰国回国后，CEA解散，换了小组，近期即将又要被调到新部门。被动的状态很危险，不做出改变，温水煮亲蛙，只会越来越被动。最近有朋友在头条让我去，虽托辞暂时没有跳槽意愿，但其实更多是因为没有积累，信心不足。常怀忧患意识，多为自己计量，才能在工作中掌握主动权，做到游刃有余，不至于狼狈不堪。&lt;/p&gt;

&lt;p&gt;预想如果跳槽，还需做好三方面的准备：&lt;/p&gt;

&lt;h1 id=&quot;1-技术&quot;&gt;1. 技术&lt;/h1&gt;

&lt;p&gt;技术是职场的立身之本。&lt;/p&gt;

&lt;p&gt;技术需要形成体系，兼顾广度和深度。当前做的是大数据、机器学习领域，一要理解各种算法思想，如分类、聚类、预测、评估等常用数据分析算法，及其业务场景下应用和延伸；二要熟悉落地工程，如Spark、Hadoop、SQL、Python、Scala，及其相互关系，技术架构和应用经验。&lt;/p&gt;

&lt;p&gt;每有体会，要常写博客，帮助自己梳理技术知识脉络。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Flag：每周一篇技术博客输出.&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&quot;2-视野&quot;&gt;2. 视野&lt;/h1&gt;

&lt;p&gt;靠技术可以混口饭吃，但要更上一层楼，视野必不可少。&lt;/p&gt;

&lt;p&gt;计算机世界的发展方向？互联网的下一个风口？君子生财之道？常思考，多读书。每有所得，要总结记录下来。&lt;/p&gt;

&lt;p&gt;知道如何使用技术驱动商业价值，甚至改变世界，才是一个熟练操作工和XX师的区别。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Flag：每周一篇文化博客输出.&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&quot;3-证书&quot;&gt;3. 证书&lt;/h1&gt;

&lt;p&gt;权威机构颁发的证书是证明自己实力的重要方式。&lt;/p&gt;

&lt;p&gt;面试由于时间和经历的有限，很难通过几个小时展示自己。高含金量的证书则可以为履历增彩不少，少了很多口舌，增加不少信心。&lt;/p&gt;

&lt;p&gt;大数据领域有 Cloudera 认证体系较为权威，可立为目标，以考促学。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Flag：取得一CCA证书。&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;—————————————————————————&lt;/p&gt;

&lt;p&gt;先就这样吧，Flag不要立的太多！&lt;/p&gt;</content><author><name>by 王勤晓</name></author><summary type="html">2019已过半，依然在华为。泰国回国后，CEA解散，换了小组，近期即将又要被调到新部门。被动的状态很危险，不做出改变，温水煮亲蛙，只会越来越被动。最近有朋友在头条让我去，虽托辞暂时没有跳槽意愿，但其实更多是因为没有积累，信心不足。常怀忧患意识，多为自己计量，才能在工作中掌握主动权，做到游刃有余，不至于狼狈不堪。</summary></entry><entry><title type="html">有序的故事</title><link href="http://localhost:4000/jekyll/update/2018/04/08/concordy.html" rel="alternate" type="text/html" title="有序的故事" /><published>2018-04-08T23:52:00+08:00</published><updated>2018-04-08T23:52:00+08:00</updated><id>http://localhost:4000/jekyll/update/2018/04/08/concordy</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2018/04/08/concordy.html">&lt;p&gt;虽然已经离开有序很久了，但当今天听到有序解散了，还是特别悲伤，就像失去了一位亲人。&lt;/p&gt;

&lt;p&gt;当初作为一个迷茫的实习生进入有序，在那里开始了我的代码之路，而且工作颇受赏识，终于找到了自己职业的方向和自信，所以一直心怀感动。毕业后经过利弊权衡，最终还是选择了抱大公司的大腿，因此自己也一直因未能跟培养我的公司一起成长而耿耿于怀，心生羞愧。&lt;/p&gt;

&lt;p&gt;对于有序我有一种很特别的情感，我很思念它。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/concordya.jpg&quot; alt=&quot;concordya&quot; /&gt;
&lt;img src=&quot;http://localhost:4000/assets/images/concordya1.jpg&quot; alt=&quot;concordya1&quot; /&gt;
&lt;img src=&quot;http://localhost:4000/assets/images/concordya2.jpg&quot; alt=&quot;concordya2&quot; /&gt;
&lt;img src=&quot;http://localhost:4000/assets/images/concordya3.jpg&quot; alt=&quot;concordya3&quot; /&gt;&lt;/p&gt;</content><author><name>by 王勤晓</name></author><summary type="html">虽然已经离开有序很久了，但当今天听到有序解散了，还是特别悲伤，就像失去了一位亲人。</summary></entry><entry><title type="html">华为留个记号</title><link href="http://localhost:4000/jekyll/update/2018/03/22/mark.html" rel="alternate" type="text/html" title="华为留个记号" /><published>2018-03-22T23:25:00+08:00</published><updated>2018-03-22T23:25:00+08:00</updated><id>http://localhost:4000/jekyll/update/2018/03/22/mark</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2018/03/22/mark.html">&lt;p&gt;入职华为已两月有余，现在还是在各种培训。上月暂时被派遣回部门，没有能闲扯的人，有些抑郁。这个月硬装培训倒是嘻嘻哈哈，乐呵的不行。明天就要回深圳部门了，不知未来具体要做什么？看邮件已经被分到了算法团队，会做大数据分析方向。数学一直是我的弱项，进入此领域最担心的问题胜任不了，目前还在强补。&lt;/p&gt;

&lt;p&gt;以前好不容易找到一个属于自己的方向，Web前端开发，艺术与技术的结合，当时感觉简直就是为我开设的职位，在有序又遇到了完美的团队和BOSS，干的不能再顺心了。后来遇到了论文，回校待了一年，慢慢的有序北大帮也解散了，毕业后因为离开的太久我也不好意思再开口回去。另一方面，自己也想去大公司看一看，所以最终毕业后的第一份工作便选择了南下深圳入菊厂。&lt;/p&gt;

&lt;p&gt;现在看来，菊厂做Web前端开发机会不大，做业务扯皮看人脸色肯定无法忍受，做算法好像更偏研究应用，代码诗人可能要荒废了。大公司不免程序繁琐，效率慢，况且华为文化有时感觉跟自己八字不合。所以这段时间常常在思考自己是回归IT继续当一个快乐自由的小码农，还是先在华为观望观望。以前冲动吃过亏，这次应该会选择后者，至少观望半年吧。&lt;/p&gt;

&lt;p&gt;又进入了迷茫期，不知道未来会是怎样？先留个记号。祝愿未来的自己不管职业怎样，首先能正直、能进步、能正确认识自己，再也不做那无是无非的糊涂人。&lt;/p&gt;</content><author><name>by 王勤晓</name></author><summary type="html">入职华为已两月有余，现在还是在各种培训。上月暂时被派遣回部门，没有能闲扯的人，有些抑郁。这个月硬装培训倒是嘻嘻哈哈，乐呵的不行。明天就要回深圳部门了，不知未来具体要做什么？看邮件已经被分到了算法团队，会做大数据分析方向。数学一直是我的弱项，进入此领域最担心的问题胜任不了，目前还在强补。</summary></entry><entry><title type="html">思念北京</title><link href="http://localhost:4000/jekyll/update/2018/03/16/beijing.html" rel="alternate" type="text/html" title="思念北京" /><published>2018-03-16T00:00:00+08:00</published><updated>2018-03-16T00:00:00+08:00</updated><id>http://localhost:4000/jekyll/update/2018/03/16/beijing</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2018/03/16/beijing.html">&lt;p&gt;毕业南下工作后，总是常常思念北京。思念燕园和中关村，思念故宫和胡同，思念长城和香山，思念玩滑板喝酒的日子，思念在有序心无旁骛地写代码，甚至开始思念那拥挤的地铁、凛冽的北风。&lt;/p&gt;

&lt;p&gt;其实，想一想，主要还是思念那里的人吧。&lt;/p&gt;</content><author><name>by 王勤晓</name></author><summary type="html">毕业南下工作后，总是常常思念北京。思念燕园和中关村，思念故宫和胡同，思念长城和香山，思念玩滑板喝酒的日子，思念在有序心无旁骛地写代码，甚至开始思念那拥挤的地铁、凛冽的北风。</summary></entry><entry><title type="html">生活要有仪式感</title><link href="http://localhost:4000/jekyll/update/2018/03/12/sense-of-ceremony.html" rel="alternate" type="text/html" title="生活要有仪式感" /><published>2018-03-12T20:02:00+08:00</published><updated>2018-03-12T20:02:00+08:00</updated><id>http://localhost:4000/jekyll/update/2018/03/12/sense-of-ceremony</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2018/03/12/sense-of-ceremony.html">&lt;p&gt;看到今天是植树节，突然想到，要是能去种一棵树就好了。在植树节种树，在清明节祭祖，读书前焚香沐浴，每天对爱人说一声我爱你，这应该就是具有仪式感的生活吧。充满敬意和仪式感的生活，想不到会怎么无趣，也很难虚度。&lt;/p&gt;

&lt;p&gt;开始行动吧！&lt;/p&gt;</content><author><name>by 王勤晓</name></author><summary type="html">看到今天是植树节，突然想到，要是能去种一棵树就好了。在植树节种树，在清明节祭祖，读书前焚香沐浴，每天对爱人说一声我爱你，这应该就是具有仪式感的生活吧。充满敬意和仪式感的生活，想不到会怎么无趣，也很难虚度。</summary></entry><entry><title type="html">最近一些想法的转变</title><link href="http://localhost:4000/jekyll/update/2018/03/11/change-in-mind.html" rel="alternate" type="text/html" title="最近一些想法的转变" /><published>2018-03-11T23:55:00+08:00</published><updated>2018-03-11T23:55:00+08:00</updated><id>http://localhost:4000/jekyll/update/2018/03/11/change-in-mind</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2018/03/11/change-in-mind.html">&lt;p&gt;最近，一些以前一直坚持的想法有了变化。&lt;/p&gt;

&lt;p&gt;首先是什么是生命中最宝贵的东西？以前我一直认为人最重要的事情是让自己变得强大，人情反复，人心薄凉，感情最不可靠，只有自己强大了，才有人依附。我渴望爱，渴望被爱，但从没把它当作生命中最重要的事情。爱是生命中最重要的东西，这听起来既文青又圣母，但我折腾了那么多事，栽了那么多跟头，至今才真正明白这个道理。&lt;/p&gt;

&lt;p&gt;以前对爱的理解太过肤浅，认为爱是靠自己吸引来的，很少想着付出。不主动关心家人，不向另一半表达爱。尤其是在感情上，认为爱情是感觉，是崇拜，是欣赏，是一种随心所欲的状态。从没意识到爱也是责任，是付出，是需要用心和行动去经营的宝贵财富。在校园里，我遇到了最真挚的爱，但是我没有珍惜，当时也没意识到那将是我一生中最宝贵的财富，最后还亲手毁了这一切，这是一件很残忍的事情。&lt;/p&gt;

&lt;p&gt;第二是关于自我认识。自己并没有才，这是最近接受的一个事实，但依然可以做到足够珍贵，不可妄自菲薄。自己不是什么好人，但依然想接近真善美。自己几斤几两已大概有些清楚，不会再去追求不属于自己的东西……关于自我认识，越来越发现这是一个千古难题，还有很多路要走。&lt;/p&gt;

&lt;p&gt;听妈妈说，最近老家有很多老人相继去世，姑奶刚入土，邻居那个热情的老奶奶又突然离去，二公听说又病重垂危，已经是在数着日子了，爷爷那一辈的人相继离开这个世界，父母那一代也将慢慢退出主舞台，突然意识到，这个世界已经被交到我们这一代人手中了。&lt;/p&gt;

&lt;p&gt;到了一定的年龄就该有一个年龄的使命了，以前为赋新词强说愁总是感叹青春已逝，但从没有像现在这样感受强烈和真实。开始有年龄的恐慌，开始想结婚生子，开始不愿去折腾。 但同时也明白了自己的责任和自己的追求，找到了比生命更宝贵的东西并懂的如何守住它。成长的代价巨大，所以更要珍惜这种成长，努力过好这一生。&lt;/p&gt;</content><author><name>by 王勤晓</name></author><summary type="html">最近，一些以前一直坚持的想法有了变化。</summary></entry><entry><title type="html">选择</title><link href="http://localhost:4000/jekyll/update/2017/12/21/choice.html" rel="alternate" type="text/html" title="选择" /><published>2017-12-21T13:15:00+08:00</published><updated>2017-12-21T13:15:00+08:00</updated><id>http://localhost:4000/jekyll/update/2017/12/21/choice</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2017/12/21/choice.html">&lt;p&gt;最近，一位读MTI现于国企工作的同学跟我抱怨其工作前景暗淡，收入微薄，欲回校重造。我听后不胜唏嘘，他是一个挺努力的同学，成绩也不错，现在郁郁寡欢大概是因为选择不合适。&lt;/p&gt;

&lt;p&gt;英语毕竟是一门工具，而且随着人工智能越来越成熟，机器翻译取代普通译员也是早晚的事，MTI作为扩招的产物，实在坑了不少学生。另一方面，在互联网时代，随着市场和政策的变化，国企的铁饭碗已经越来越没有多少优势了。如若还是用十年前的思维去做选择，便很容易被时代抛弃。在这个变化莫测的年代，选择真是太重要了。&lt;/p&gt;

&lt;p&gt;我还是比较庆幸自己读研选择了CAT，恰逢时运幸我，开始走进了计算机的世界。爱折腾这毛病，在感情上是百害而无一利，但在人生方向的选择了上，有时却颇有裨益。我一直在尝试自己能做什么，适合做什么，翻译、新闻、CAT、老师、程序员等皆有尝试，目前看来程序员对我来说是一个在兴趣、收入、能力匹配上面都合适的选择，但看到满大街的程序员和不断的泡沫破裂传言，也在思考，如果有一天没有这么多需求，我该何去何从。所以工作最终还是选择去华为做网络技术工程师，听说这个岗位外派机会很多，一来收入会多些解我饱腹之忧，二来能闯荡世界安我这颗不安的心。已入职的老段说部门选择很多，做技术、做业务都可以，我听后很是向往，摩拳擦掌跃跃欲试。&lt;/p&gt;

&lt;p&gt;看准时机，跳出舒适圈，尝试多种选择。但折腾固然有利有弊，每次选择都将是一生的改变，且行且谨慎。&lt;/p&gt;</content><author><name>by 王勤晓</name></author><summary type="html">最近，一位读MTI现于国企工作的同学跟我抱怨其工作前景暗淡，收入微薄，欲回校重造。我听后不胜唏嘘，他是一个挺努力的同学，成绩也不错，现在郁郁寡欢大概是因为选择不合适。</summary></entry></feed>
